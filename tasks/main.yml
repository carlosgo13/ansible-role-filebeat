---
- name: configure elastic repo
  include_role:
    name: nephelaiio.elastic_repo
  when: filebeat_repo_manage | bool

- block:

    - name: install yum version lock support
      package:
        name: yum-plugin-versionlock
      when: ansible_os_family == 'RedHat'

    - name: disable yum package lock
      command: "yum versionlock delete {{ item }}"
      ignore_errors: yes
      loop: "{{ [filebeat_package_names] | flatten }}"
      when: ansible_os_family == 'RedHat'
      tags:
        - skip_ansible_lint

    - name: disable apt package lock
      command: "apt-mark unhold {{ item }}"
      loop: "{{ [filebeat_package_names] | flatten }}"
      when: ansible_os_family == 'Debian'

  when: filebeat_package_hold | bool
  ignore_errors: yes

- name: install filebeat elastic packages
  package:
    name: "{{ filebeat_package_names }}"
    state: "{{ filebeat_package_state }}"

- block:

    - name: enable apt package hold
      command: "apt-mark hold {{ item }}"
      loop: "{{ [filebeat_package_names] | flatten }}"
      when:
        - ansible_os_family == 'Debian'

    - name: enable yum package lock
      command: "yum versionlock add {{ item }}"
      loop: "{{ [filebeat_package_names] | flatten }}"
      when:
        - ansible_os_family == 'RedHat'
      tags:
        - skip_ansible_lint

  when: filebeat_package_hold | bool

- block:

    - name: configure filebeat
      copy:
        content: |
          # Ansible managed

          {{ filebeat_conf | to_nice_yaml(indent=2) }}
        dest: "{{ filebeat_conf_path }}"
      notify: restart filebeat

    - name: prune stale filebeat module configuration files
      file:
        path: "{{ filebeat_conf_modules_path }}/{{ module_name }}.yml.disabled"
        state: absent
      vars:
        module_name: "{{ module_conf.module }}"
      loop_control:
        loop_var: module_conf
        label: "{{ module_name }}"
      loop: "{{ filebeat_conf_modules }}"

    - name: manage filebeat module configuration files
      copy:
        dest: "{{ filebeat_conf_modules_path }}/{{ module_name }}.yml"
        content: |
          ---
          {{ module_conf_item | to_nice_yaml(indent=2) }}
      vars:
        module_name: "{{ module_conf.module }}"
        module_conf_item:
          - "{{ module_conf }}"
      loop_control:
        loop_var: module_conf
        label: "{{ module_name }}"
      notify: restart filebeat
      loop: "{{ filebeat_conf_modules }}"

  when:
    - filebeat_conf_manage | bool
    - filebeat_package_state in ['present', 'latest']

- name: manage filebeat services
  service:
    name: "{{ filebeat_service_name }}"
    state: "{{ filebeat_service_status }}"
    enabled: "{{ filebeat_service_enabled }}"
  when: filebeat_package_state in ['present', 'absent']
